#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>   // Universal Telegram Bot Library written by Brian Lough: https://github.com/witnessmenow/Universal-Arduino-Telegram-Bot
#include <ArduinoJson.h>
const char* ssid = "*******";//insert wifi name and password here respectivley
const char* password = "**********";

#define BOTtoken "**********:*******************"
#define CHAT_ID "**************"//use your respective chat ID and Bot token here 
WiFiClientSecure client;
UniversalTelegramBot bot(BOTtoken, client);
// Checks for new messages every 1 second.
unsigned long lastTimeBotRan;
int botRequestDelay = 1000;
#define trigpin 25 // orange wire
#define echopin 33 // yellow wire
int duration;
int level;
int volume;
int Millilitres;
float percentage;
int capacity = 882;


void measuredistance(){
  digitalWrite(trigpin,LOW);
  delayMicroseconds(2);
  digitalWrite(trigpin,HIGH);
  delayMicroseconds(25);
  digitalWrite(trigpin,LOW);
  duration=pulseIn(echopin,HIGH);
  level=18-((duration/29.1545)/2);
  volume=49*level;
  Millilitres=volume;
  percentage=(volume * 0.113379);
 
}
String getLevel(){
  level=18-((duration/29.1545)/2);
  String message = "Level: " + String(level) + "cm \n";
    return message;
}
String getmillilitres(){
  Millilitres=volume;
  String message = "Millilitres: " + String(Millilitres) + " ml \n";
    return message;
}
String getVolume(){
  volume=49*level;
  percentage=(volume * 0.113379);
  String message = "Volume: " + String(volume) + "cm³ \n";
  message += "Percent: " + String(percentage) + " % \n";
    return message;
}

String getCapacity(){
  capacity = 882;
  String message = "Capacity: " + String(capacity) + "ml \n";
    return message;
}


void handleNewMessages(int numNewMessages) {
  Serial.println("handleNewMessages");
  Serial.println(String(numNewMessages));
  for (int i=0; i<numNewMessages; i++) {
    // Chat id of the requester
    String chat_id = String(bot.messages[i].chat_id);
    if (chat_id != CHAT_ID){
      bot.sendMessage(chat_id, "Unauthorized user", "");
      continue;
    }
    
    // Print the received message
    String text = bot.messages[i].text;
    Serial.println(text);
    String from_name = bot.messages[i].from_name;
    if (text == "/start") {
      String welcome = "Welcome, " + from_name + ".\n";
      welcome += "Use the following commands to control your outputs.\n\n";
      welcome += "/capacity to get water tank capacity \n";
      welcome += "/ml to get capacity in millilitres \n";
       welcome += "/vol to get percentage of  water in tank \n";
      bot.sendMessage(chat_id, welcome, "");
    }
    if (text == "/capacity") {
      String capacity = getCapacity();
      bot.sendMessage(chat_id, "Capacity of the tank is: 882 ml", "");
      
    }
    
    if (text == "/ml") {
      String Millilitres=getmillilitres();
      bot.sendMessage(chat_id, Millilitres, "");
      
    }
    
    
     if (text == "/vol") {
      String volume = getVolume();
      bot.sendMessage(chat_id, volume , "");
      }
    }
}


void setup() {

  pinMode(trigpin,OUTPUT);
  pinMode(echopin,INPUT);
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  #ifdef ESP32
    client.setCACert(TELEGRAM_CERTIFICATE_ROOT); // Add root certificate for api.telegram.org
  #endif
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  // Print ESP32 Local IP Address
  Serial.println(WiFi.localIP());
}
  

void loop() {
   if (millis() > lastTimeBotRan + botRequestDelay)  {
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    while(numNewMessages) {
      Serial.println("got response");
      handleNewMessages(numNewMessages);
      numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    }
    lastTimeBotRan = millis();
  
  measuredistance();
  delay(500);

  

  Serial.print("Level\tVolume\tMillilitres\n");
  Serial.print(level);
  Serial.print("cm");
  Serial.print("\t"); 
  Serial.print(volume);
  Serial.print("cm³");
  Serial.print("\t");
  Serial.print(Millilitres);
  Serial.print("ml");
  Serial.print("\n");

   }

}
